name: Tests

on: [push, pull_request]

jobs:
  unit-test:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9", "3.10", pypy3]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip for Python 3.5
        id: install-pip-py35
        run: |
          python -m pip install --upgrade "pip>=20.1"
        if: matrix.python-version == '3.5'

      - name: Install pip
        id: install-pip
        run: |
          python -m pip install --upgrade "pip>=21.1"
        if: matrix.python-version != '3.5'

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade tox

      - name: Run tox
        run: |
          tox -e cov
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

      - name: Coverage report
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
